# from telebot import TeleBot, types
# from db import save_message
# from kb import generate_contact_keyboard

# def setup_bot_handlers(bot):
#     @bot.message_handler(commands=['start', 'help'])
#     def send_welcome(message):
#         bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω –∫–ª—É–± VIP üéâü•Ç", reply_markup=generate_contact_keyboard())

#     @bot.message_handler(func=lambda message: True)
#     def echo_all(message):
#         bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", reply_markup=generate_contact_keyboard())

import os
from telebot import types
import telebot
from db import authenticate_admin, set_setting, get_setting
from kb import generate_main_keyboard, generate_admin_keyboard, generate_contact_keyboard
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)

def setup_bot_handlers(bot):
    @bot.message_handler(commands=['start', 'help'])
    def send_welcome(message):
        bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω –∫–ª—É–± VIP üéâü•Ç", reply_markup=generate_contact_keyboard())


SUPERADMIN_LOGIN = os.getenv('SUPERADMIN_LOGIN')
SUPERADMIN_PASSWORD = os.getenv('SUPERADMIN_PASSWORD')

@bot.message_handler(commands=['settings'])
def settings_command(message):
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")
    bot.register_next_step_handler(msg, process_login_step)

def process_login_step(message):
    try:
        login, password = message.text.split()
        if login == SUPERADMIN_LOGIN and password == SUPERADMIN_PASSWORD:
            bot.send_message(message.chat.id, "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", reply_markup=generate_admin_keyboard(True))
        else:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")
    except Exception as e:
        bot.reply_to(message, "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
        
@bot.message_handler(func=lambda message: message.text == '–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª')
def channel_link(message):
    link = get_setting('channel_link')
    bot.reply_to(message, link or "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

@bot.message_handler(func=lambda message: message.text == '–°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞')
def bot_link(message):
    link = get_setting('bot_link')
    bot.reply_to(message, link or "–°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

@bot.message_handler(func=lambda message: message.text == '–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞')
def manager_contact(message):
    contact = get_setting('manager_contact')
    bot.reply_to(message, contact or "–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")